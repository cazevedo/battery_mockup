#! /usr/bin/env python
import rospy
from std_msgs.msg import Bool

class ChargingPublisher(object):
    def __init__(self, robot_names, is_charging):
        self.charging_pub_list = []
        self.is_charging = []
        for index, r_name in enumerate(robot_names):
            self.charging_pub_list.append(rospy.Publisher('/'+r_name+'/battery_mockup/is_charging', Bool, queue_size=1))
            isc = Bool()
            isc.data = is_charging[index]
            self.is_charging.append(isc)

        self.robot_names = robot_names

    def pub(self):
        for robot_index, charging_pub in enumerate(self.charging_pub_list):
            rate = rospy.Rate(10)  # 10hz
            while not rospy.is_shutdown():
                connections = charging_pub.get_num_connections()
                rospy.loginfo('Connections of Pub #%d: %d', robot_index, connections)
                if connections > 0:
                    charging_pub.publish(self.is_charging[robot_index])
                    rospy.loginfo('Initial Pose Published for '+self.robot_names[robot_index])
                    break
                rate.sleep()



if __name__ == '__main__':
    try:
        rospy.init_node('InitialPoseHome')

        start_charging = ChargingPublisher(robot_names=['robot_1', 'robot_2'], is_charging=[False, False])
        start_charging.pub()


    except rospy.ROSInterruptException:
        raise
